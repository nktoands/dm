// ================== Begin foodcategory and food data importing ==================//

// GITHUB: https://github.com/nktoands/dm

//Import foodcategory data

LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/foodcategory.csv' as row
    MERGE (fc: foodcategory{category_id: toInteger(row.category_id)})
    ON CREATE SET fc.type = row.type, fc.name = row.name, fc.description = row.description;

//Import food data
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/food.csv' as row
MERGE(f: food{food_id: toInteger(row.food_id)})
ON CREATE SET f.category_id = toInteger(row.category_id), f.name = row.name,f.unit = row.unit, f.description = row.description;

//Create relationship between foodcategory and food
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/food.csv' as row
MATCH(f:food{food_id: toInteger(row.food_id)})
MATCH(fc:foodcategory{category_id: toInteger(row.category_id)})
MERGE (f) -[:PART_OF]->(fc);

// ================== End foodcategory and food importing ==================//


// ================== Begin area, foodstore, household, shipper data importing ==================//

//Import area data
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/area.csv' as row
    MERGE (a: area{area_id: toInteger(row.area_id)})
    ON CREATE SET a.district = row.district, a.ward = row.ward, a.status = row.status;

//Import foodstore data
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/foodstore.csv' as row
    MERGE (fs: foodstore{store_id: toInteger(row.store_id)})
    ON CREATE SET fs.area_id = toInteger(row.area_id), fs.name = row.name, fs.address = row.address,
	fs.owner = row.owner, fs.phone = row.phone, fs.email = row.email, fs.status = row.status;
	
//Import household data
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/household.csv' as row
    MERGE (hh: household{household_id: toInteger(row.household_id)})
    ON CREATE SET hh.area_id = toInteger(row.area_id), hh.name = row.name, hh.address = row.address,
	hh.phone = hh.phone, hh.email = hh.email;

//Import shipper data
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/shipper.csv' as row
    MERGE (s: shipper{shipper_id: toInteger(row.shipper_id)})
    ON CREATE SET s.area_id = toInteger(row.area_id), s.ssn = row.ssn, s.name = row.name, s.phone = row.phone, s.email = row.email,
	s.vehicle_plate = row.vehicle_plate, s.dose1_date = row.dose1_date, s.dose2_date = row.dose2_date, s.status = row.status;

//Create relationship between area and foodstore
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/foodstore.csv' as row
MATCH(fs:foodstore{store_id: toInteger(row.store_id)})
MATCH(a: area{area_id: toInteger(row.area_id)})
MERGE (fs) -[:BELONG_TO]->(a);

//Create relationship between area and household
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/household.csv' as row
MATCH(hh:household{household_id: toInteger(row.household_id)})
MATCH(a: area{area_id: toInteger(row.area_id)})
MERGE (hh) -[:BELONG_TO]->(a);

//Create relationship between area and shipper
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/shipper.csv' as row
MATCH(s:shipper{shipper_id: toInteger(row.shipper_id)})
MATCH(a: area{area_id: toInteger(row.area_id)})
MERGE (s) -[:BELONG_TO]->(a);

// ================== End area, foodstore, household, shipper data importing ==================//


// ================== Begin foodposted data importing ==================//

//Import foodposted data
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/foodposted.csv' as row
    MERGE (fp: foodposted{posted_id: toInteger(row.posted_id)})
    ON CREATE SET fp.food_id = toInteger(row.food_id), fp.store_id = toInteger(row.store_id),
	fp.price = toInteger(row.price), fp.inventory = toInteger(row.inventory), fp.post_date = row.post_date;
	
//Create relationship between foodposted and foodstore
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/foodposted.csv' as row
MATCH(fp:foodposted{posted_id: toInteger(row.posted_id)})
MATCH(fs: foodstore{store_id: toInteger(row.store_id)})
MERGE (fp) -[:POSTED_BY]->(fs);

//Create relationship between foodposted and food
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/foodposted.csv' as row
MATCH(fp:foodposted{posted_id: toInteger(row.posted_id)})
MATCH(f: food{food_id: toInteger(row.food_id)})
MERGE (fp) -[:IS_A]->(f);

// ================== End foodposted data importing ==================//


// ================== Begin order and order_item data importing ==================//

//Import order data
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/order.csv' as row
    MERGE (o: order{order_id: toInteger(row.order_id)})
    ON CREATE SET o.household_id = toInteger(row.household_id), o.shipper_id = toInteger(row.shipper_id),
	o.name = row.name, o.order_date = row.order_date, o.status = row.status;

//Create relationship between order and household
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/order.csv' as row
MATCH(o:order{order_id: toInteger(row.order_id)})
MATCH(hh: household{household_id: toInteger(row.household_id)})
MERGE (o) <-[:PLACE]-(hh);

//Create relationship between order and shipper
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/order.csv' as row
MATCH(o:order{order_id: toInteger(row.order_id)})
MATCH(s: shipper{shipper_id: toInteger(row.shipper_id)})
MERGE (o) <-[:ASSIGNED_TO]-(s);

//Import order_item data
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/order_item.csv' as row
    MERGE (oi: order_item{item_id: toInteger(row.item_id)})
    ON CREATE SET oi.order_id = toInteger(row.order_id), oi.posted_id = toInteger(row.posted_id), oi.quantity = toInteger(row.quantity);

//Create relationship between order and order_item
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/order_item.csv' as row
MATCH(o:order{order_id: toInteger(row.order_id)})
MATCH(oi: order_item{item_id: toInteger(row.item_id)})
MERGE (o) -[:CONTAINS]->(oi);

//Create relationship between foodposted and order_item
LOAD CSV WITH HEADERS FROM 'https://raw.githubusercontent.com/nktoands/dm/main/order_item.csv' as row
MATCH(fp:foodposted{posted_id: toInteger(row.posted_id)})
MATCH(oi: order_item{item_id: toInteger(row.item_id)})
MERGE (oi) -[:GET_FROM]->(fp);

// ================== End ================== //